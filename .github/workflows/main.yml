
name: ASSURANCE_CASE_CHECKS_CI

on: [push, pull_request]

env:
  FASTEN_VER: "fasten-2020-07-18"
  FASTEN_ZIP: "https://github.com/danielratiu/assurance_case_build_demo/releases/download/release%2F2020_07_18_fasten_rcp_for_demo/fasten-2020-07-18.zip"
  ASSURANCE_CASE_DIR: "/home/runner/work/assurance_case_build_demo/assurance_case_build_demo"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download FASTEN
      run: |
        echo "Downloading FASTEN"
        echo ${FASTEN_ZIP}
        curl -L ${FASTEN_ZIP} > "FASTEN.zip"
        
        echo "Unzipping FASTEN"
        unzip -o "FASTEN.zip" -d ~
        
        echo "Creating symbolic link to FASTEN folder"
        ln -s "/home/runner/${FASTEN_VER}/" FASTEN
                
    - name: Change FASTEN config
      run: |
        echo "Changing config"
        echo "fastenDir=/home/runner/${FASTEN_VER}" > gradle.properties
        echo "mps.home=/home/runner/${FASTEN_VER}" >> gradle.properties
        echo "mpsHomeDir=/home/runner/${FASTEN_VER}" >> gradle.properties
        echo "fastenAssuranceDemoDir=${ASSURANCE_CASE_DIR}" >> gradle.properties
        
        echo "Gradle Properties:"
        cat gradle.properties
      
    - name: Set up Gradle
      run: |
        echo "Setting up gradle build..."
        sudo apt install openjdk-11-jdk
        sudo apt install gradle
        
        chmod +x ./gradlew
        
    - name: Running Gradle build
      run: |
        export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        export JB_JAVA11_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        export JDK_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        
        # X-server
        Xvfb :0 &
        export DISPLAY=:0
        
        echo "Current path from where we start gradlew: "
        pwd
        
        echo "### Content of the current directory ###"
        ls -al
        
        echo "### Content of the parent directory ###"
        ls -al ..
        
        ./gradlew
        
        echo "### Content of the build/artifacts directory ###"
        ls -al .
        ls -alR build/
        
    - name: Checking if the consistency check failed
      run: |
        TEST_RESULTS_FILE="${ASSURANCE_CASE_DIR}/build/scripts/TEST-jetbrains.mps.testbench.junit.suites.AntModuleTestSuite0-all.xml"
        TEST_FAILURE_MARKER="[junit] Test jetbrains.mps.testbench.junit.suites.AntModuleTestSuite0 FAILED"
        cat ${TEST_RESULTS_FILE}
        if [ ! -z $(grep "$TEST_FAILURE_MARKER" "$TEST_RESULTS_FILE") ]; then echo "CONSISTENCY CHECK TEST FAILED!"; exit 1; fi